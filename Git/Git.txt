
Basic Commands
==============

git status 
  show modified files in working directory, staged for your next commit 

git add [file] 
  add a file as it looks now to your next commit (stage) 

git reset [file] 
  unstage a file while retaining the changes in working directory 

git reset --hard [commit] 
  clear staging area, rewrite working tree from specified commit

git diff 
  diff of what is changed but not staged git diff --staged diff of what is staged but not yet committed 

git commit -m “[descriptive message]” 
  commit your staged content as a new commit snapshot

git push
   Last step, to transfer changed who been commit back to the server.



A great web site with simple list and explanations: 
  * https://education.github.com/git-cheat-sheet-education.pdf
  * https://frontend.turing.edu/lessons/module-1/git-commands.html

Another with more text:  https://www.nobledesktop.com/learn/git/git-branches

Pull remote code to local machine
================================

1  git clone https://git-codecommit.ca-central-1.amazonaws.com/v1/repos/<YourRepoName>
 (cd <YourRepoName> folder)

3. git checkout development

4. git pull 

Additionally

5.  git checkout –B  ‘can give jira ticket number ex. PIM 311 ‘
6.  git push --set -upstream origin ‘PIM 311’

Step 5 and 6 are optional.



 To commit Changes:
 ==================

  1 - git status (Facultative)
    --> Should tell you that there are changes ready to be commited

  2 - git add .git 
     Mark all the files to be commited
 
  3 - git commit -m "write commit message here"
      Commit all the change (on your local git copy)

  4 - git push
      Finally, send the changes to the remove git repository



 Discard all local changes:
 ==========================

  To remove all your changes, and go back to the orignial content
  (like it is on the remove branch)

   git reset –-hard        (That one apears to do most of the work)
   git clean -fxd



Create a new remote repository 
=================================

git init
<Add a new file called README.md>
git add README.md
git commit -m "Adding the first file on the git-test repo"
git branch -M main
git remote add origin https://github.com/daniel-berger-hull/git-test.git
git push -u origin main

Note: This one appears to work only if you have an existing remove repo on GitHub (i.e git-test)
      (Oct 2023)Confirming again that the remote repository MUST be created before git push

Note 2:  The following push command appears to work also 
            git push --set-upstream origin master
        (-u is the short version of --set-upstream) 
        
        
Push an existing repository
===========================

git remote add origin https://github.com/daniel-berger-hull/git-test.git
git branch -M main
git push -u origin main



Credential Managers
===================

GitHub doesn't accept anymore plain password with you push change to your GitHub repo.
You need a Credential Manager to acheive this.


Linux Steps
----------

 (First steps are getting the tool to run...)

1 - Download manager at: https://github.com/git-ecosystem/git-credential-manager/releases/tag/v2.6.1   
    (i.e: gcm-linux_amd64.2.6.1.deb  )

2 - Install the manager:     sudo dpkg -i <path-to-package>

3 - Configure manager:       git-credential-manager configure

  (Next is to create a tocken)

From your GitHub
4 - Select from right hand menu -->  'Settings'
5 - Select from the LEFT hand menu  --> 'Developer Settings'    The last one in the menu
6 - Select 'Personnal Access Token' -->  'Token (classic)
7 - On button Button 'Generate new Token', expend and select 'Generate new Token (Classic)'
8 - Enter all the fields required in the form (has a lot of permissions)
9 - Click  button 'Generate Token'
10 - Copy the token generated

 (Next is to use the new token)

From one of you repository already CLONED on your LOCAL machine (has to be inside a repo to work)

11 - Enter 'git push'
12 - Select the option with the token and copy it when asked 




 

     git config --global credential.credentialStore cache

Good video here: https://www.youtube.com/watch?v=kbx_digAd1s

