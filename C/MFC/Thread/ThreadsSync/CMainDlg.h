
// CMainDlg.h : header file
//  This class in the main dialog class of a project that is testing MFC Worker Class
//  You have a section for the producer thread (i.e Start/Stop Button) and the same for 
//  a consumer Thread, which is doing a simple addition of all the values generated by the
//  producer class
// 
//  The dynamic result are displyed in the Bar Graph, which is a derivated CStatic class 
//			* CListSizeDraw

#pragma once


#include "CDemoThread.h"
#include "CListSizeDraw.h"



#define WM_USER_THREAD_FINISHED             (WM_USER+0x100)
#define WM_USER_THREAD_UPDATE_COUNT_DISPLAY (WM_USER+0x101)


#define THREAD_A		    10
#define THREAD_B		    11
#define	THREAD_SLEEP_TIME   15


UINT WorkerThreadA(LPVOID pParam);
UINT WorkerThreadB(LPVOID pParam);



class CThreadParam : public CObject
{
	
	public:

		CThreadParam() : param1(0), param2(0)					{}
		CThreadParam(HWND ptr, int p1, int p2) : hWnd(ptr), param1(p1), param2(p2)   {}

		CThreadParam(HWND ptr, CEvent* pStop) : hWnd(ptr), pStopRequest(pStop) {}

		int param1;
		int param2;
		HWND hWnd;
		CEvent* pStopRequest;
		
		
};

// CMainDlg dialog
class CMainDlg : public CDialogEx
{
// Construction
public:
	CMainDlg(CWnd* pParent = nullptr);	// standard constructor
	~CMainDlg();


// Dialog Data
#ifdef AFX_DESIGN_TIME
	enum { IDD = IDD_SIMPLETHREAD_DIALOG };
#endif

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support
	virtual BOOL OnInitDialog();
	virtual BOOL DestroyWindow();
	afx_msg void OnPaint();
	afx_msg HCURSOR OnQueryDragIcon();


	void updateSupportThreadControls(BOOL procThreadRunning, BOOL classProcThreadRunning);
	
	CButton  m_startThreadAButton;
	CButton  m_startThreadBButton;
	CButton  m_stopThreadAButton;
	CButton  m_stopThreadBButton;

	CListSizeDraw m_listSizeDraw;


	CString m_threadAStatusString;
	CString m_threadBStatusString;
	CString m_listSizeString;


	HICON m_hIcon;

	CThreadParam* params = NULL;
	BOOL m_threadARunning = FALSE;
	BOOL m_threadBRunning = FALSE;

	CEvent* pStopRequestA = NULL;
	CEvent* pStopRequestB = NULL;


	void starThread(int index);
	void stopThread(int index);


	
	DECLARE_MESSAGE_MAP()

public:
	afx_msg void OnBnClickedCancel();

	afx_msg void OnBnClickedStartThreadAButton();
	afx_msg void OnBnClickedStartThreadBButton();
	afx_msg void OnBnClickedStopThreadAButton();
	afx_msg void OnBnClickedStopThreadBButton();

	afx_msg LONG OnThreadFinished(WPARAM wParam, LPARAM lParam);
	afx_msg LONG OnUpdateCountDisplay(WPARAM wParam, LPARAM lParam);
		
};
