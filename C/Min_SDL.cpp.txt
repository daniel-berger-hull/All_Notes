// Make sure to apply the configuration changes described in the SDL_Graphics.txt file...
//

#include <iostream>

#include <SDL.h>

#include "Global.h"

SDL_Window* win;
SDL_Renderer* render;


int init()
{
	// retutns zero on success else non-zero
	if (SDL_Init(SDL_INIT_EVERYTHING) != 0) {
		printf("error initializing SDL: %s\n", SDL_GetError());
	}

	win = SDL_CreateWindow("GAME", // creates a window
		SDL_WINDOWPOS_CENTERED,
		SDL_WINDOWPOS_CENTERED,
		SCREEN_WIDTH, SCREEN_HEIGHT, 0);


	// triggers the program that controls
	// your graphics hardware and sets flags
	Uint32 render_flags = SDL_RENDERER_ACCELERATED;

	// creates a renderer to render our images
	render = SDL_CreateRenderer(win, -1, render_flags);

	return 0;
}

int cleanUp()
{

	SDL_DestroyRenderer(render);
	SDL_DestroyWindow(win);
	SDL_Quit();

	return 0;
}


int redrawScreen()
{
	SDL_SetRenderDrawColor(render, 0x00, 0x00, 0x00, 0xFF);
	SDL_RenderClear(render);

	SDL_SetRenderDrawColor(render, 0xF8, 0xB0, 0x90, 0xFF);

	//SDL_RenderFillRects(render, rects, 20);

	SDL_RenderPresent(render);
	return 0;
}


int main(int argc, char* argv[])
{
	init();


	// annimation loop
	while (!close) {
		SDL_Event event;

		// Events mangement
		while (SDL_PollEvent(&event)) {
			switch (event.type) {

			case SDL_QUIT:
				// handling of close button
				close = 1;
				break;

			case SDL_KEYDOWN:
				// keyboard API for key pressed
				switch (event.key.keysym.scancode) {
				case SDL_SCANCODE_W:
				case SDL_SCANCODE_UP:
					//dest.y -= speed / 30;
					break;
				case SDL_SCANCODE_A:
				case SDL_SCANCODE_LEFT:
					//dest.x -= speed / 30;
					break;
				case SDL_SCANCODE_S:
				case SDL_SCANCODE_DOWN:
					//dest.y += speed / 30;
					break;
				case SDL_SCANCODE_D:
				case SDL_SCANCODE_RIGHT:
					//dest.x += speed / 30;
					break;
				case SDL_SCANCODE_ESCAPE:
					// handling of close button
					//cl.draw(render); 
					close = 1;
					break;
				default:
					break;
				}
			}
		}

		redrawScreen();
		SDL_Delay(1000 / 60);  // calculates to 60 fps
	}

	cleanUp();

	return OK;
}

